{
 "Resources": {
  "DynamoDbTablesConstructProbeTable085E6DDA": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "ProbeItems"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/DynamoDbTablesConstruct/ProbeTable/Resource"
   }
  },
  "AdminApiConstructAdminApiProbeLambdaServiceRole6F250827": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApiProbeLambda/ServiceRole/Resource"
   }
  },
  "AdminApiConstructAdminApiProbeLambdaServiceRoleDefaultPolicy9DE0A0FB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:GetParametersByPath"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DynamoDbTablesConstructProbeTable085E6DDA",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AdminApiConstructAdminApiProbeLambdaServiceRoleDefaultPolicy9DE0A0FB",
    "Roles": [
     {
      "Ref": "AdminApiConstructAdminApiProbeLambdaServiceRole6F250827"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApiProbeLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AdminApiConstructAdminApiProbeLambda455B4C8C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "8fe0404824552862b2ef8062dbc648be56531cb203c57b82752a3b20dcfdf0b4.zip"
    },
    "Handler": "probe.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "AdminApiConstructAdminApiProbeLambdaServiceRole6F250827",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "AdminApiConstructAdminApiProbeLambdaServiceRoleDefaultPolicy9DE0A0FB",
    "AdminApiConstructAdminApiProbeLambdaServiceRole6F250827"
   ],
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApiProbeLambda/Resource",
    "aws:asset:path": "asset.8fe0404824552862b2ef8062dbc648be56531cb203c57b82752a3b20dcfdf0b4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AdminApiConstructAdminApiC5F590AD": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "AdminApi",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/Resource"
   }
  },
  "AdminApiConstructAdminApiDefaultStage005A9C67": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "AdminApiConstructAdminApiC5F590AD"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/DefaultStage/Resource"
   }
  },
  "AdminApiConstructAdminApiGETapiprobeAdminApiProbeLambdaIntegration39D129A6": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "AdminApiConstructAdminApiC5F590AD"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "AdminApiConstructAdminApiProbeLambda455B4C8C",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/GET--api--probe/AdminApiProbeLambdaIntegration/Resource"
   }
  },
  "AdminApiConstructAdminApiGETapiprobeAdminApiProbeLambdaIntegrationPermission465078AC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminApiConstructAdminApiProbeLambda455B4C8C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminApiConstructAdminApiC5F590AD"
       },
       "/*/*/api/probe"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/GET--api--probe/AdminApiProbeLambdaIntegration-Permission"
   }
  },
  "AdminApiConstructAdminApiGETapiprobe3FFFA77B": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "AdminApiConstructAdminApiC5F590AD"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /api/probe",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "AdminApiConstructAdminApiGETapiprobeAdminApiProbeLambdaIntegration39D129A6"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/GET--api--probe/Resource"
   }
  },
  "WebAppApiConstructWebAppAdapterLambdaServiceRole6C77E01C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebAppApiConstruct/WebAppAdapterLambda/ServiceRole/Resource"
   }
  },
  "WebAppApiConstructWebAppAdapterLambdaServiceRoleDefaultPolicy7D2A2975": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:GetParametersByPath"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DynamoDbTablesConstructProbeTable085E6DDA",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WebAppApiConstructWebAppAdapterLambdaServiceRoleDefaultPolicy7D2A2975",
    "Roles": [
     {
      "Ref": "WebAppApiConstructWebAppAdapterLambdaServiceRole6C77E01C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebAppApiConstruct/WebAppAdapterLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "WebAppApiConstructWebAppAdapterLambda643C244D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e6b35cd491fbb359b842c677e388c06ce83226c0d2bf3ca81ff0f3a6e65e481b.zip"
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "WebAppApiConstructWebAppAdapterLambdaServiceRole6C77E01C",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "WebAppApiConstructWebAppAdapterLambdaServiceRoleDefaultPolicy7D2A2975",
    "WebAppApiConstructWebAppAdapterLambdaServiceRole6C77E01C"
   ],
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebAppApiConstruct/WebAppAdapterLambda/Resource",
    "aws:asset:path": "asset.e6b35cd491fbb359b842c677e388c06ce83226c0d2bf3ca81ff0f3a6e65e481b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WebAppApiConstructWebAppApi94B8E891": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "WebAppApi",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebAppApiConstruct/WebAppApi/Resource"
   }
  },
  "WebAppApiConstructWebAppApiDefaultRouteWebAppAdapterLambdaIntegrationB0DB3A17": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "WebAppApiConstructWebAppApi94B8E891"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "WebAppApiConstructWebAppAdapterLambda643C244D",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebAppApiConstruct/WebAppApi/DefaultRoute/WebAppAdapterLambdaIntegration/Resource"
   }
  },
  "WebAppApiConstructWebAppApiDefaultRouteWebAppAdapterLambdaIntegrationPermission70A7CBA9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WebAppApiConstructWebAppAdapterLambda643C244D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "WebAppApiConstructWebAppApi94B8E891"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebAppApiConstruct/WebAppApi/DefaultRoute/WebAppAdapterLambdaIntegration-Permission"
   }
  },
  "WebAppApiConstructWebAppApiDefaultRoute5CA0A961": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "WebAppApiConstructWebAppApi94B8E891"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$default",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "WebAppApiConstructWebAppApiDefaultRouteWebAppAdapterLambdaIntegrationB0DB3A17"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebAppApiConstruct/WebAppApi/DefaultRoute/Resource"
   }
  },
  "WebAppApiConstructWebAppApiDefaultStage37D37754": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "WebAppApiConstructWebAppApi94B8E891"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebAppApiConstruct/WebAppApi/DefaultStage/Resource"
   }
  },
  "SystemBucketConstructSystemBucketEA96EAA7": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:admin:31b47d07",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:static:3eefede8",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketConstruct/SystemBucket/Resource"
   }
  },
  "SystemBucketConstructSystemBucketPolicy8B551A4F": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "SystemBucketConstructSystemBucketEA96EAA7"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "SystemBucketConstructSystemBucketEA96EAA7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SystemBucketConstructSystemBucketEA96EAA7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "SystemBucketConstructSystemBucketOAI25EB3FA4",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "SystemBucketConstructSystemBucketEA96EAA7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SystemBucketConstructSystemBucketEA96EAA7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "SystemBucketConstructSystemBucketOAI25EB3FA4",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "SystemBucketConstructSystemBucketEA96EAA7",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketConstruct/SystemBucket/Policy/Resource"
   }
  },
  "SystemBucketConstructSystemBucketAutoDeleteObjectsCustomResource4F2A0A49": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "SystemBucketConstructSystemBucketEA96EAA7"
    }
   },
   "DependsOn": [
    "SystemBucketConstructSystemBucketPolicy8B551A4F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketConstruct/SystemBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "SystemBucketConstructSystemBucketOAI25EB3FA4": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketConstruct/SystemBucketOAI/Resource"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "SystemBucketConstructSystemBucketEA96EAA7"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
    "aws:asset:property": "Code"
   }
  },
  "EntryPointConstructWebAppApiApiCachePolicy33D4742A": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "Comment": "Cache policy for WebApp HttpApi with 10 minutes TTL",
     "DefaultTTL": 600,
     "MaxTTL": 600,
     "MinTTL": 600,
     "Name": "WebAppApiApiCachePolicy",
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": false,
      "EnableAcceptEncodingGzip": false,
      "HeadersConfig": {
       "HeaderBehavior": "none"
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "none"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/EntryPointConstruct/WebAppApiApiCachePolicy/Resource"
   }
  },
  "EntryPointConstructAdminRewriteFunction62DF9626": {
   "Type": "AWS::CloudFront::Function",
   "Properties": {
    "AutoPublish": true,
    "FunctionCode": "\n                function handler(event) {\n                    var request = event.request;\n                    var uri = request.uri;\n        \n                    // Check if URI is ending with '/admin' or '/admin/'\n                    if (uri.endsWith('/admin') || uri.endsWith('/admin/')) {\n                        // Rewrite URI to '/admin/index.html'\n                        request.uri = '/admin/index.html';\n                    }\n                    return request;\n                }\n            ",
    "FunctionConfig": {
     "Comment": {
      "Fn::Join": [
       "",
       [
        {
         "Ref": "AWS::Region"
        },
        "BlggPlatfoructAdminRewriteFunction09CC65D6"
       ]
      ]
     },
     "Runtime": "cloudfront-js-1.0"
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::Region"
       },
       "BlggPlatfoructAdminRewriteFunction09CC65D6"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/EntryPointConstruct/AdminRewriteFunction/Resource"
   }
  },
  "EntryPointConstructEntryPointDistribution138597BF": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CacheBehaviors": [
      {
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "Compress": true,
       "FunctionAssociations": [
        {
         "EventType": "viewer-request",
         "FunctionARN": {
          "Fn::GetAtt": [
           "EntryPointConstructAdminRewriteFunction62DF9626",
           "FunctionARN"
          ]
         }
        }
       ],
       "PathPattern": "/admin",
       "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
       "TargetOriginId": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin2742B4008",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "Compress": true,
       "FunctionAssociations": [
        {
         "EventType": "viewer-request",
         "FunctionARN": {
          "Fn::GetAtt": [
           "EntryPointConstructAdminRewriteFunction62DF9626",
           "FunctionARN"
          ]
         }
        }
       ],
       "PathPattern": "/admin/*",
       "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
       "TargetOriginId": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin37EEF2ED5",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
       "Compress": true,
       "PathPattern": "/api/*",
       "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
       "TargetOriginId": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin4FDF44514",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "Compress": true,
       "PathPattern": "/static/*",
       "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
       "TargetOriginId": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin5EEAD22A7",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS",
       "PUT",
       "PATCH",
       "POST",
       "DELETE"
      ],
      "CachePolicyId": {
       "Ref": "EntryPointConstructWebAppApiApiCachePolicy33D4742A"
      },
      "Compress": true,
      "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
      "TargetOriginId": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin1AE8BCE6F",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Join": [
         "",
         [
          {
           "Ref": "WebAppApiConstructWebAppApi94B8E891"
          },
          ".execute-api.",
          {
           "Ref": "AWS::Region"
          },
          ".amazonaws.com"
         ]
        ]
       },
       "Id": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin1AE8BCE6F"
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "SystemBucketConstructSystemBucketEA96EAA7",
         "RegionalDomainName"
        ]
       },
       "Id": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin2742B4008",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "SystemBucketConstructSystemBucketOAI25EB3FA4"
           }
          ]
         ]
        }
       }
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "SystemBucketConstructSystemBucketEA96EAA7",
         "RegionalDomainName"
        ]
       },
       "Id": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin37EEF2ED5",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "SystemBucketConstructSystemBucketOAI25EB3FA4"
           }
          ]
         ]
        }
       }
      },
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Join": [
         "",
         [
          {
           "Ref": "AdminApiConstructAdminApiC5F590AD"
          },
          ".execute-api.",
          {
           "Ref": "AWS::Region"
          },
          ".amazonaws.com"
         ]
        ]
       },
       "Id": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin4FDF44514"
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "SystemBucketConstructSystemBucketEA96EAA7",
         "RegionalDomainName"
        ]
       },
       "Id": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin5EEAD22A7",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "SystemBucketConstructSystemBucketOAI25EB3FA4"
           }
          ]
         ]
        }
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/EntryPointConstruct/EntryPointDistribution/Resource"
   }
  },
  "PreviewPointConstructPreviewPointDistribution875742C6": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CacheBehaviors": [
      {
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "Compress": true,
       "PathPattern": "/static/*",
       "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
       "TargetOriginId": "BlggPlatformStackPreviewPointConstructPreviewPointDistributionOrigin24821BA66",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS",
       "PUT",
       "PATCH",
       "POST",
       "DELETE"
      ],
      "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
      "Compress": true,
      "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
      "TargetOriginId": "BlggPlatformStackPreviewPointConstructPreviewPointDistributionOrigin167302C7C",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Join": [
         "",
         [
          {
           "Ref": "WebAppApiConstructWebAppApi94B8E891"
          },
          ".execute-api.",
          {
           "Ref": "AWS::Region"
          },
          ".amazonaws.com"
         ]
        ]
       },
       "Id": "BlggPlatformStackPreviewPointConstructPreviewPointDistributionOrigin167302C7C"
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "SystemBucketConstructSystemBucketEA96EAA7",
         "RegionalDomainName"
        ]
       },
       "Id": "BlggPlatformStackPreviewPointConstructPreviewPointDistributionOrigin24821BA66",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "SystemBucketConstructSystemBucketOAI25EB3FA4"
           }
          ]
         ]
        }
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/PreviewPointConstruct/PreviewPointDistribution/Resource"
   }
  },
  "SystemBucketDeploymentConstructAdminPwaDeploymentAwsCliLayer2090DF76": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3fb6287214999ddeafa7cd0e3e58bc5144c8678bb720f3b5e45e8fd32f333eb3.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketDeploymentConstruct/AdminPwaDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3fb6287214999ddeafa7cd0e3e58bc5144c8678bb720f3b5e45e8fd32f333eb3.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "SystemBucketDeploymentConstructAdminPwaDeploymentCustomResourceC8A3FD21": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "550c183033d13fdbbfe3148602acf6dd0d4a60952d3dc973fc0c585d711a1132.zip"
    ],
    "DestinationBucketName": {
     "Ref": "SystemBucketConstructSystemBucketEA96EAA7"
    },
    "DestinationBucketKeyPrefix": "admin",
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketDeploymentConstruct/AdminPwaDeployment/CustomResource/Default"
   }
  },
  "SystemBucketDeploymentConstructWebAppBucketDeploymentAwsCliLayer534C66BB": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3fb6287214999ddeafa7cd0e3e58bc5144c8678bb720f3b5e45e8fd32f333eb3.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketDeploymentConstruct/WebAppBucketDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3fb6287214999ddeafa7cd0e3e58bc5144c8678bb720f3b5e45e8fd32f333eb3.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "SystemBucketDeploymentConstructWebAppBucketDeploymentCustomResource9F10245E": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "383c7e6acf6939e82e5f301f10a3c429308c4c38f01036bb4bf12683996a4633.zip"
    ],
    "DestinationBucketName": {
     "Ref": "SystemBucketConstructSystemBucketEA96EAA7"
    },
    "DestinationBucketKeyPrefix": "static",
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketDeploymentConstruct/WebAppBucketDeployment/CustomResource/Default"
   }
  },
  "SystemBucketDeploymentConstructEntryPointDistributionInvalidationCacheInvalidationResourceAC9314BD": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"CloudFront\",\"action\":\"createInvalidation\",\"parameters\":{\"DistributionId\":\"",
       {
        "Ref": "EntryPointConstructEntryPointDistribution138597BF"
       },
       "\",\"InvalidationBatch\":{\"CallerReference\":\"invalidate-1700161206996\",\"Paths\":{\"Quantity\":2,\"Items\":[\"/admin/*\",\"/static/*\"]}}},\"physicalResourceId\":{\"id\":\"invalidate-1700161206996\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"CloudFront\",\"action\":\"createInvalidation\",\"parameters\":{\"DistributionId\":\"",
       {
        "Ref": "EntryPointConstructEntryPointDistribution138597BF"
       },
       "\",\"InvalidationBatch\":{\"CallerReference\":\"invalidate-1700161206996\",\"Paths\":{\"Quantity\":2,\"Items\":[\"/admin/*\",\"/static/*\"]}}},\"physicalResourceId\":{\"id\":\"invalidate-1700161206996\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "SystemBucketDeploymentConstructEntryPointDistributionInvalidationCacheInvalidationResourceCustomResourcePolicy21F7436B"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketDeploymentConstruct/EntryPointDistributionInvalidation/CacheInvalidationResource/Resource/Default"
   }
  },
  "SystemBucketDeploymentConstructEntryPointDistributionInvalidationCacheInvalidationResourceCustomResourcePolicy21F7436B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cloudfront:CreateInvalidation",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SystemBucketDeploymentConstructEntryPointDistributionInvalidationCacheInvalidationResourceCustomResourcePolicy21F7436B",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketDeploymentConstruct/EntryPointDistributionInvalidation/CacheInvalidationResource/CustomResourcePolicy/Resource"
   }
  },
  "SystemBucketDeploymentConstructPreviewPointDistributionInvalidationCacheInvalidationResource8F17841A": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"CloudFront\",\"action\":\"createInvalidation\",\"parameters\":{\"DistributionId\":\"",
       {
        "Ref": "PreviewPointConstructPreviewPointDistribution875742C6"
       },
       "\",\"InvalidationBatch\":{\"CallerReference\":\"invalidate-1700161207000\",\"Paths\":{\"Quantity\":1,\"Items\":[\"/static/*\"]}}},\"physicalResourceId\":{\"id\":\"invalidate-1700161207000\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"CloudFront\",\"action\":\"createInvalidation\",\"parameters\":{\"DistributionId\":\"",
       {
        "Ref": "PreviewPointConstructPreviewPointDistribution875742C6"
       },
       "\",\"InvalidationBatch\":{\"CallerReference\":\"invalidate-1700161207000\",\"Paths\":{\"Quantity\":1,\"Items\":[\"/static/*\"]}}},\"physicalResourceId\":{\"id\":\"invalidate-1700161207000\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "SystemBucketDeploymentConstructPreviewPointDistributionInvalidationCacheInvalidationResourceCustomResourcePolicyAF9534F8"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketDeploymentConstruct/PreviewPointDistributionInvalidation/CacheInvalidationResource/Resource/Default"
   }
  },
  "SystemBucketDeploymentConstructPreviewPointDistributionInvalidationCacheInvalidationResourceCustomResourcePolicyAF9534F8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cloudfront:CreateInvalidation",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SystemBucketDeploymentConstructPreviewPointDistributionInvalidationCacheInvalidationResourceCustomResourcePolicyAF9534F8",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/SystemBucketDeploymentConstruct/PreviewPointDistributionInvalidation/CacheInvalidationResource/CustomResourcePolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SystemBucketConstructSystemBucketEA96EAA7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SystemBucketConstructSystemBucketEA96EAA7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "SystemBucketDeploymentConstructAdminPwaDeploymentAwsCliLayer2090DF76"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "17c16a3854838fd3ff4bda08146122a6701f33b9c86ae17f415ad0dc47a97544.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.17c16a3854838fd3ff4bda08146122a6701f33b9c86ae17f415ad0dc47a97544",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21STU/DMAz9LdyzMEBIHBmdEEhITANxrbzEFLM0qfKxqYr630nSMorg5Gf7JXbeyyW/WF7zuDyDo1sIuV8o2vH44kHsWSrVUfYaWiNT8RV2Cln1rgsYmIJ2J4HH+6CFJ6Nza443aFtybsqeoEf7hrbkL6Qbhd6c+AMjaHncmnFCiRujSPTlpoIG5q7qCM6hd3yVA5PYKdO3qD2/C2KPfn0qZDaPY/UOHLIR5usmNIafKfN8YNBRAx6P0B8ueUztVUeZlaRpyo6P2mNj4fu1WxN8EkUoE+S7NWmj+GypIb0SAp17lGkn8mVQlTn3mfM/A8QH/qw1T/+Vek3OW9qF78Y8Hwa2RWeCFciKZHn9JD6rgvOmPfXyA074V2tjzYEk2snuWmUf6/Q1hCK+OrpKUbGWiXKsttM5V5p/pjwH34XiQmW0pNH75QJU9wF8eXY7fcPzHOcWTIz44H2XnchxtCKjIn5BM1fS27WRyD/d+eHihl+l6z8d0cKGpHOLfDvGLxFStrICAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "EntryPointDomainName": {
   "Value": {
    "Fn::GetAtt": [
     "EntryPointConstructEntryPointDistribution138597BF",
     "DomainName"
    ]
   }
  },
  "PreviewPointDomainName": {
   "Value": {
    "Fn::GetAtt": [
     "PreviewPointConstructPreviewPointDistribution875742C6",
     "DomainName"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}