{
 "Resources": {
  "AdminApiConstructProbeTable28254D2A": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/ProbeTable/Resource"
   }
  },
  "AdminApiConstructProbeTableNameParameter25D7E148": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "probe-table-name",
    "Type": "String",
    "Value": {
     "Ref": "AdminApiConstructProbeTable28254D2A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/ProbeTableNameParameter/Resource"
   }
  },
  "AdminApiConstructAdminApiProbeLambdaServiceRole6F250827": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApiProbeLambda/ServiceRole/Resource"
   }
  },
  "AdminApiConstructAdminApiProbeLambdaServiceRoleDefaultPolicy9DE0A0FB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:GetParametersByPath"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AdminApiConstructProbeTable28254D2A",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AdminApiConstructAdminApiProbeLambdaServiceRoleDefaultPolicy9DE0A0FB",
    "Roles": [
     {
      "Ref": "AdminApiConstructAdminApiProbeLambdaServiceRole6F250827"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApiProbeLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AdminApiConstructAdminApiProbeLambda455B4C8C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f8cf08821e3494e8584b24f874ef112786871cdd46b22b604ac6487dd15b6562.zip"
    },
    "Handler": "probe.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "AdminApiConstructAdminApiProbeLambdaServiceRole6F250827",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "AdminApiConstructAdminApiProbeLambdaServiceRoleDefaultPolicy9DE0A0FB",
    "AdminApiConstructAdminApiProbeLambdaServiceRole6F250827"
   ],
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApiProbeLambda/Resource",
    "aws:asset:path": "asset.f8cf08821e3494e8584b24f874ef112786871cdd46b22b604ac6487dd15b6562",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AdminApiConstructAdminApiC5F590AD": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "AdminApi",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/Resource"
   }
  },
  "AdminApiConstructAdminApiDefaultStage005A9C67": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "AdminApiConstructAdminApiC5F590AD"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/DefaultStage/Resource"
   }
  },
  "AdminApiConstructAdminApiGETapiprobeAdminApiProbeLambdaIntegration39D129A6": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "AdminApiConstructAdminApiC5F590AD"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "AdminApiConstructAdminApiProbeLambda455B4C8C",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/GET--api--probe/AdminApiProbeLambdaIntegration/Resource"
   }
  },
  "AdminApiConstructAdminApiGETapiprobeAdminApiProbeLambdaIntegrationPermission465078AC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AdminApiConstructAdminApiProbeLambda455B4C8C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "AdminApiConstructAdminApiC5F590AD"
       },
       "/*/*/api/probe"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/GET--api--probe/AdminApiProbeLambdaIntegration-Permission"
   }
  },
  "AdminApiConstructAdminApiGETapiprobe3FFFA77B": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "AdminApiConstructAdminApiC5F590AD"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /api/probe",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "AdminApiConstructAdminApiGETapiprobeAdminApiProbeLambdaIntegration39D129A6"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminApiConstruct/AdminApi/GET--api--probe/Resource"
   }
  },
  "AdminPwaBucketConstructAdminPwaBucketB616072B": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:admin:52fe34a4",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminPwaBucketConstruct/AdminPwaBucket/Resource"
   }
  },
  "AdminPwaBucketConstructAdminPwaBucketPolicyC8228857": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "AdminPwaBucketConstructAdminPwaBucketB616072B"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AdminPwaBucketConstructAdminPwaBucketB616072B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AdminPwaBucketConstructAdminPwaBucketB616072B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "EntryPointConstructAdminPwaOAIAB77CD98",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AdminPwaBucketConstructAdminPwaBucketB616072B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AdminPwaBucketConstructAdminPwaBucketB616072B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "EntryPointConstructAdminPwaOAIAB77CD98",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "AdminPwaBucketConstructAdminPwaBucketB616072B",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminPwaBucketConstruct/AdminPwaBucket/Policy/Resource"
   }
  },
  "AdminPwaBucketConstructAdminPwaBucketAutoDeleteObjectsCustomResource576FA340": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "AdminPwaBucketConstructAdminPwaBucketB616072B"
    }
   },
   "DependsOn": [
    "AdminPwaBucketConstructAdminPwaBucketPolicyC8228857"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminPwaBucketConstruct/AdminPwaBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "AdminPwaBucketConstructAdminPwaBucketB616072B"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
    "aws:asset:property": "Code"
   }
  },
  "WebsiteBucketConstructWebsiteBucketF0C8142D": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:646200cc",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebsiteBucketConstruct/WebsiteBucket/Resource"
   }
  },
  "WebsiteBucketConstructWebsiteBucketPolicy23C9D957": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "WebsiteBucketConstructWebsiteBucketF0C8142D"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebsiteBucketConstructWebsiteBucketF0C8142D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "WebsiteBucketConstructWebsiteBucketF0C8142D",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "EntryPointConstructWebsiteOAIB7161001",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebsiteBucketConstructWebsiteBucketF0C8142D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "WebsiteBucketConstructWebsiteBucketF0C8142D",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "EntryPointConstructWebsiteOAIB7161001",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "WebsiteBucketConstructWebsiteBucketF0C8142D",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebsiteBucketConstruct/WebsiteBucket/Policy/Resource"
   }
  },
  "WebsiteBucketConstructWebsiteBucketAutoDeleteObjectsCustomResourceE4893254": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "WebsiteBucketConstructWebsiteBucketF0C8142D"
    }
   },
   "DependsOn": [
    "WebsiteBucketConstructWebsiteBucketPolicy23C9D957"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebsiteBucketConstruct/WebsiteBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "EntryPointConstructWebsiteOAIB7161001": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/EntryPointConstruct/WebsiteOAI/Resource"
   }
  },
  "EntryPointConstructAdminPwaOAIAB77CD98": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/EntryPointConstruct/AdminPwaOAI/Resource"
   }
  },
  "EntryPointConstructAdminRewriteFunction62DF9626": {
   "Type": "AWS::CloudFront::Function",
   "Properties": {
    "AutoPublish": true,
    "FunctionCode": "\n                function handler(event) {\n                    var request = event.request;\n                    var uri = request.uri;\n        \n                    // Check if URI is ending with '/admin' or '/admin/'\n                    if (uri.endsWith('/admin') || uri.endsWith('/admin/')) {\n                        // Rewrite URI to '/admin/index.html'\n                        request.uri = '/admin/index.html';\n                    }\n                    return request;\n                }\n            ",
    "FunctionConfig": {
     "Comment": {
      "Fn::Join": [
       "",
       [
        {
         "Ref": "AWS::Region"
        },
        "BlggPlatfructAdminRewriteFunction09CC65D6"
       ]
      ]
     },
     "Runtime": "cloudfront-js-1.0"
    },
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::Region"
       },
       "BlggPlatfructAdminRewriteFunction09CC65D6"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/EntryPointConstruct/AdminRewriteFunction/Resource"
   }
  },
  "EntryPointConstructEntryPointDistribution138597BF": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CacheBehaviors": [
      {
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "Compress": true,
       "FunctionAssociations": [
        {
         "EventType": "viewer-request",
         "FunctionARN": {
          "Fn::GetAtt": [
           "EntryPointConstructAdminRewriteFunction62DF9626",
           "FunctionARN"
          ]
         }
        }
       ],
       "PathPattern": "/admin",
       "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
       "TargetOriginId": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin2742B4008",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "Compress": true,
       "FunctionAssociations": [
        {
         "EventType": "viewer-request",
         "FunctionARN": {
          "Fn::GetAtt": [
           "EntryPointConstructAdminRewriteFunction62DF9626",
           "FunctionARN"
          ]
         }
        }
       ],
       "PathPattern": "/admin/*",
       "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
       "TargetOriginId": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin37EEF2ED5",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
       "Compress": true,
       "PathPattern": "/api/*",
       "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
       "TargetOriginId": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin4FDF44514",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "ResponseHeadersPolicyId": "eaab4381-ed33-4a86-88ca-d9558dc6cd63",
      "TargetOriginId": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin1AE8BCE6F",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "WebsiteBucketConstructWebsiteBucketF0C8142D",
         "RegionalDomainName"
        ]
       },
       "Id": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin1AE8BCE6F",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "EntryPointConstructWebsiteOAIB7161001"
           }
          ]
         ]
        }
       }
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "AdminPwaBucketConstructAdminPwaBucketB616072B",
         "RegionalDomainName"
        ]
       },
       "Id": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin2742B4008",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "EntryPointConstructAdminPwaOAIAB77CD98"
           }
          ]
         ]
        }
       }
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "AdminPwaBucketConstructAdminPwaBucketB616072B",
         "RegionalDomainName"
        ]
       },
       "Id": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin37EEF2ED5",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "EntryPointConstructAdminPwaOAIAB77CD98"
           }
          ]
         ]
        }
       }
      },
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "https-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Join": [
         "",
         [
          {
           "Ref": "AdminApiConstructAdminApiC5F590AD"
          },
          ".execute-api.",
          {
           "Ref": "AWS::Region"
          },
          ".amazonaws.com"
         ]
        ]
       },
       "Id": "BlggPlatformStackEntryPointConstructEntryPointDistributionOrigin4FDF44514"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/EntryPointConstruct/EntryPointDistribution/Resource"
   }
  },
  "WebsiteDeploymentConstructWebsiteDeploymentAwsCliLayerA1375BAA": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3fb6287214999ddeafa7cd0e3e58bc5144c8678bb720f3b5e45e8fd32f333eb3.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebsiteDeploymentConstruct/WebsiteDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3fb6287214999ddeafa7cd0e3e58bc5144c8678bb720f3b5e45e8fd32f333eb3.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "WebsiteDeploymentConstructWebsiteDeploymentCustomResourceFCECB036": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "12f552b5b4593afca98b64119e79961c6dfbf8d9e19403ab608e10dc559812ca.zip"
    ],
    "DestinationBucketName": {
     "Ref": "WebsiteBucketConstructWebsiteBucketF0C8142D"
    },
    "Prune": true,
    "DistributionId": {
     "Ref": "EntryPointConstructEntryPointDistribution138597BF"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/WebsiteDeploymentConstruct/WebsiteDeployment/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AdminPwaBucketConstructAdminPwaBucketB616072B",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "WebsiteBucketConstructWebsiteBucketF0C8142D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AdminPwaBucketConstructAdminPwaBucketB616072B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "WebsiteBucketConstructWebsiteBucketF0C8142D",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "WebsiteDeploymentConstructWebsiteDeploymentAwsCliLayerA1375BAA"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AdminPwaDeploymentConstructAdminPwaDeploymentAwsCliLayerEBBF52BF": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3fb6287214999ddeafa7cd0e3e58bc5144c8678bb720f3b5e45e8fd32f333eb3.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminPwaDeploymentConstruct/AdminPwaDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3fb6287214999ddeafa7cd0e3e58bc5144c8678bb720f3b5e45e8fd32f333eb3.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "AdminPwaDeploymentConstructAdminPwaDeploymentCustomResourceB5FE4610": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "550c183033d13fdbbfe3148602acf6dd0d4a60952d3dc973fc0c585d711a1132.zip"
    ],
    "DestinationBucketName": {
     "Ref": "AdminPwaBucketConstructAdminPwaBucketB616072B"
    },
    "DestinationBucketKeyPrefix": "admin",
    "Prune": true,
    "DistributionId": {
     "Ref": "EntryPointConstructEntryPointDistribution138597BF"
    },
    "DistributionPaths": [
     "/admin/*"
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/AdminPwaDeploymentConstruct/AdminPwaDeployment/CustomResource/Default"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21SXU8jMQz8LbynoYCQeKQUIZCQqAq618pNzGKaTVb5aLWK9r+fky17exJPHtsjZzzOtbxa3sq8vIBTWCh9WBjay/weQR0El3ZZ9xZap7n4AXuDYv1pKxhECG1herLNBjy0GNGX9pQMwkC71yDzU7IqkrOlPccb9C2FcM5eoUf/B33N33mswegm/iAI+MGtG0XUuHGGVF8nVcSibnYZQsAY5KoEobEzrm/RRvmQ1AHj41QobJnH6gMEFCMs485oDP9emeeDgI4aiHiC/ngtM7dXHRUWu9dUjS82YuPhZ9utS5F9U8Yl/ekdK8pvnhqyK6UwhBfNmijWh9aF81Q4vzJ+9fORAh9jn34a83wYxBaDS16hqL4Ujexw4b2l2CXeOoXo2olV9E74v9bGuyNpvvV43Z0pZ9vxZ1GG5OoU1obqJesezmoar7dcgOm+QC4v7s9/7bLEuYlnRn6OsSteljiaWVC1r6KZr7yYdRrld7g8Xt3JGx7/HYgWPrFTLcrtGP8CA+M4mecCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "BlggPlatformStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "AdminApiConstructAdminApiUrl360CE42B": {
   "Value": {
    "Fn::GetAtt": [
     "AdminApiConstructAdminApiC5F590AD",
     "ApiEndpoint"
    ]
   }
  },
  "DistributionDomainName": {
   "Value": {
    "Fn::GetAtt": [
     "EntryPointConstructEntryPointDistribution138597BF",
     "DomainName"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}